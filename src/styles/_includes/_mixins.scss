@mixin bp-mobile {
    @media (max-width: #{$max-width}) {
        @content;
    }
}

@mixin mobile-aspect {
    @media screen and (device-aspect-ratio: 40/71) {
        @content;
    }
}

@function decimal-round ($number, $digits: 0, $mode: round) {
    $n: 1;
    // $number must be a number
    @if type-of($number) != number {
        @warn '#{ $number } is not a number.';
        @return $number;
    }
    // $digits must be a unitless number
    @if type-of($digits) != number {
        @warn '#{ $digits } is not a number.';
        @return $number;
    } @else if not unitless($digits) {
        @warn '#{ $digits } has a unit.';
        @return $number;
    }
    @for $i from 1 through $digits {
        $n: $n * 10;
    }
    @if $mode == round {
        @return round($number * $n) / $n;
    } @else if $mode == ceil {
        @return ceil($number * $n) / $n;
    } @else if $mode == floor {
        @return floor($number * $n) / $n;
    } @else {
        @warn '#{ $mode } is undefined keyword.';
        @return $number;
    }
}

@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

@function pxrem($sizePx, $size100:strip-unit($global-font-size)) {
    @if not unitless($sizePx) {
        $sizePx: strip-units($sizePx);
    }
    @if not unitless($size100) {
        $size100: strip-units($size100);
    }
    @return decimal-round(($sizePx / $size100) * 1rem, 2);
}

%clear:after {
    content: '';
    clear: both;
    font-size: 1px;
    line-height: 1px;
    height: 0;
    overflow: hidden;
    display: block;
}

%table,
.table,
.vertical-box {
    display: table;
    width: 100%;
}

%table-row {
    display: table-row;
    width: 100%;
}

%table-cell,
.vertical-middle {
    display: table-cell;
    vertical-align: middle;
}

%inline-middle {
    display: inline-block;
    vertical-align: middle;
}

%full {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
}

%blackout {
    position: relative;
    &:before {
        content: '';
        @extend %full;
        background: rgba(0, 0, 0, 0.5);
    }
}


%lowercase {
    text-transform: lowercase;
    &:first-letter {
        text-transform: uppercase;
    }
}